@inject HttpClient client
<EditForm Model="@tenants" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>First Name :</label>
        <div>
            <InputText @bind-Value="@tenants.FirstName" />
            <ValidationMessage For="@(() => tenants.FirstName)" />
        </div>
    </div>
    <div class="form-group ">
        <div>
            <label>Last Name :</label>
            <div>
                <InputText @bind-Value="@tenants.LastName" />
                <ValidationMessage For="@(() => tenants.LastName)" />
            </div>
        </div>
    </div>
    <div class="form-group ">
        <div>
            <label>Father Name :</label>
            <div>
                <InputText @bind-Value="@tenants.FatherName" />
                <ValidationMessage For="@(() => tenants.FatherName)" />
            </div>
        </div>
    </div>
    <div class="form-group ">
        <div>
            <label>Account Number :</label>
            <div>
                <InputNumber @bind-Value="@tenants.AccountNumber" />
                <ValidationMessage For="@(() => tenants.AccountNumber)" />
            </div>
        </div>
    </div>
    <div class="form-group ">
        <div>
            <label>Apartment Id :</label>
            <div>
                <InputSelectNumber class="form-control"
                                   @bind-Value="tenants.ApartmentId">
                    <option value="0">--Select a apartment--</option>
                    @foreach (var item in apartments)
                    {
                        @if (item.Id == tenants.ApartmentId)
                        {
                            <option selected value="@item.Id">@item.Address</option>
                        }
                        else
                        {
                            <option value="@item.Id">@item.Address</option>
                        }
                    }
                </InputSelectNumber>
                <ValidationMessage For="@(() => tenants.ApartmentId)" />
            </div>
        </div>
    </div>
    <button type="submit" class="btn btn-success">
        @ButtonText
    </button>
</EditForm>
@code {
    [Parameter] public Tenants tenants { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    private List<Apartment> apartments = new List<Apartment>();

    protected override async Task OnInitializedAsync()
    {
        apartments = await client.GetFromJsonAsync<List<Apartment>>("api/apartment");
    }
}
